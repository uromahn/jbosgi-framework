# Very general
project.dependson       = ${p-dependson;:}
project.bootclasspath   = ${p-bootclasspath;:}
project.buildpath       = ${p-buildpath;:}
project.sourcepath      = ${p-sourcepath;:}
project.allsourcepath   = ${p-allsourcepath;:}
project.output          = ${p-output}
project.testpath        = ${p-testpath;:}
project.workspace		= ${workspace}
project.dir				= ${project}

-verbose				= true
verbose					= false
src                     = src
bin                     = bin
target-dir				= generated
target					= ${project}/${target-dir}
build					= ${workspace}/cnf
licensed				= ${workspace}/licensed
repo					= ${build}/repo
licensed-repo			= ${licensed}/repo
released-repo			= ${build}/${target-dir}/repo
project.name            = ${basename;${project}}
p			            = ${project.name}
bin.includes			= ${project.name}.jar
prebuild				= 

# Java compiler options
java 					= java
javac 					= javac
javac.debug				= on
javac.source 			= 1.3
javac.target 			= 1.2


#Bnd options
-sources               	= true
-sourcepath             = ${project}/src 

-plugin	            	= aQute.lib.deployer.FileRepo; \
                                location=${repo}; \
                                readonly=true, \
                          aQute.lib.deployer.FileRepo; \
                                location=${licensed-repo}; \
                                readonly=true, \
                          aQute.lib.deployer.FileRepo; \
                                location=${released-repo}, \
  						  aQute.bnd.signing.JartoolSigner; \
  						        keystore=${build}/keystore; \
  						        keypass=testtest; \
  						        storepass=testtest, \
                          Packaging; \
                                path:="${build}/${bin}";\
                                command:=-pack, \
                          Coverage; \
                                path:="${build}/${bin},${workspace}/org.osgi.tools/${bin}"; \
                                command:="-coverage", \
                          SignatureTest; \
                                path:=${build}/${bin}; \
                                command:="-signaturetest"


-make                   =  \
  (*).(jar);                             type=bnd;  recipe="bnd/$1.bnd"


# Time options
# base.modified is used by bnd to not make when files are not changed
base.modified			= ${fmodified;${build}/build.xml,${build}/build.bnd,${project}/bnd.bnd,${project}/build.xml}
base.modified.readable	= ${long2date;${base.modified}}
project.build			= ${tstamp;yyyyMMddHHmm}

copyright = Copyright (c) OSGi Alliance (2000, ${tstamp;yyyy}). All Rights Reserved.
copyright.html = Copyright &copy; OSGi Alliance (2000, ${tstamp;yyyy}). All Rights Reserved.

# deprecated -versionpolicy             = ${range;[==,+)}
# default version policies
#   -provider-policy =  ${range;[==,=+)}
#   -consumer-policy =  ${range;[==,+)}

osgi.release				= 5
osgi.version				= 5.0

build.version				= ${osgi.version}.0.${project.build}
core.build.version			= ${build.version}
cmpn.build.version			= ${build.version}
enterprise.build.version	= ${build.version}
residential.build.version	= ${build.version}
proposed.build.version		= ${build.version}

core.companion.jar			= ${repo;osgi.core;${osgi.version};lowest}
cmpn.companion.jar			= ${repo;osgi.cmpn;${osgi.version};lowest}
enterprise.companion.jar	= ${repo;osgi.enterprise;${osgi.version};lowest}
residential.companion.jar	= ${repo;osgi.residential;${osgi.version};lowest}
proposed.companion.jar		= ${repo;osgi.proposed;${osgi.version};lowest}

ee.j2se-15.jar = ${repo;ee.j2se;1.5;lowest}

# Documentation
Bundle-Copyright       	= ${copyright}
Bundle-Vendor			= OSGi Alliance
Bundle-Version			= ${build.version}
-removeheaders			= Include-Resource, Private-Package, Conditional-Package

junit.package			= junit.framework;version=3.8
junit					= com.springsource.junit;version=3.8;export="${junit.package}"

# Define the OSGi vendor framework
osgi.vendor.framework = org.jboss.osgi.framework
osgi.vendor.version   = 3.0.0

-runpath							= \
	${osgi.vendor.framework};version=${osgi.vendor.version}, \
	${junit}

# Use the following for framework RI development	
#-runpath							= \
#	org.eclipse.osgi;		version=snapshot, \
#	${junit}

-runtrace=true
runproperties = report=true, \
	osgi.resolverMode=strict
runsecureproperties = ${runproperties}, \
	org.osgi.framework.security=osgi, \
	org.osgi.framework.trust.repositories=${build}/keystore

-runproperties = ${runproperties}

testcases = ${sort;${classes;extending;junit.framework.TestCase;concrete}}


