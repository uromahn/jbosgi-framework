<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  JBossOSGi Framework
  %%
  Copyright (C) 2010 - 2012 JBoss by Red Hat
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as 
  published by the Free Software Foundation, either version 2.1 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Lesser Public License for more details.
  
  You should have received a copy of the GNU General Lesser Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/lgpl-2.1.html>.
  #L%
  -->

<project default="setup.vi">

  <property name="target.dir" value="${basedir}/target" />
  <property name="reports.dir" value="${target.dir}/test-reports" />

  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->

  <target name="init">

    <property file="${basedir}/ant.properties" />
  	
  	<!-- Get the framework version from the POM -->
  	<xmlproperty file="${basedir}/../pom.xml"/>
    <property name="framework.version" value="${project.version}" />
  	
    <!-- Setup property defaults -->
    <property environment="env" />
    <property name="username" value="${env.USER}" />
    <property name="tck.checkout.dir" value="/home/${username}/git/org.osgi.build" />
    <property name="maven.local.repository" value="/home/${username}/.m2/repository" />
    <property name="framework.groupId" value="org/jboss/osgi/framework" />
    <property name="framework.artifactId" value="jbosgi-framework-aggregated" />
    <property name="framework.jar" value="${framework.artifactId}-${framework.version}-all.jar" />
    <property name="framework.target.jar" value="org.jboss.osgi.framework-3.0.0.jar" />
    <property name="framework.target.path" value="${tck.checkout.dir}/licensed/repo/org.jboss.osgi.framework/${framework.target.jar}" />

    <echo>************************************************</echo>
    <echo message="framework.jar=${framework.jar}" />
    <echo message="tck.checkout.dir=${tck.checkout.dir}" />
    <echo>************************************************</echo>

    <!-- Check if the osgitck dir is available -->
    <available property="tck.checkout.dir.available" file="${tck.checkout.dir}" />
    <fail message="Cannot find: ${tck.checkout.dir}" unless="tck.checkout.dir.available" />

    <!-- Check if the jboss.osgi.framework jar is available -->
    <property name="framework.jar.path" value="${maven.local.repository}/${framework.groupId}/${framework.artifactId}/${framework.version}/${framework.jar}" />
    <available property="framework.jar.available" file="${framework.jar.path}" />
    <fail message="Cannot find: ${framework.jar.path}" unless="framework.jar.available" />
  </target>

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <!-- Setup the TCK to use the RI (equinox) -->
  <target name="setup.ri" description="Setup the TCK using the RI (Equinox)" depends="init">
    <!-- Build the TCK -->
    <ant dir="${tck.checkout.dir}" target="build" />
  </target>

  <!-- Setup the TCK to use the Vendor Implemenation -->
  <target name="setup.vi" description="Setup the TCK using the Vendor Implemenation" depends="init,update-framework">
    <!-- Build the TCK -->
    <ant dir="${tck.checkout.dir}" target="build" />
  </target>

  <!-- Update the JBoss OSGi Framework -->
  <target name="update-framework" description="Update the JBoss OSGi Framework" depends="init">
    <!-- Copy the OSGi Framework -->
    <mkdir dir="${tck.checkout.dir}/licensed/repo/org.jboss.osgi.framework" />
    <copy file="${framework.jar.path}" tofile="${framework.target.path}" 
    	overwrite="true" />
  </target>

  <!-- ================================================================== -->
  <!-- TCK Tests                                                          -->
  <!-- ================================================================== -->

  <target name="run-core-tests" description="Run the TCK core tests" depends="init,update-framework">
    <fail message="Cannot find: ${tck.checkout.dir}" unless="tck.checkout.dir.available" />

  	<delete dir="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core"/>
  	<copy file="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core.jar" tofile="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core.backup.jar" overwrite="false"/>
  	<unjar src="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core.jar" dest="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core"/>
  	<delete file="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core/jar/org.eclipse.osgi-3.8.0.jar" />
  	<copy file="${framework.target.path}" tofile="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core/jar/${framework.target.jar}"/>
    <copy todir="${tck.checkout.dir}" overwrite="true">
      <fileset dir="${basedir}/overlay.vi" />
    </copy>
  	<jar basedir="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core" destfile="${tck.checkout.dir}/osgi.ct/generated/osgi.ct.core.jar" />
  	
  	<ant dir="${tck.checkout.dir}/osgi.ct" target="osgi.ct.core" />
  </target>

  <target name="test-reports" description="Generate the TCK test reports" depends="init">
    <fail message="Cannot find: ${tck.checkout.dir}" unless="tck.checkout.dir.available" />
    <mkdir dir="${reports.dir}" />
    <junitreport todir="${reports.dir}">
      <fileset dir="${tck.checkout.dir}">
        <include name="**/reports/TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${reports.dir}/html" />
    </junitreport>

    <echo />
    <echo message="Generated test reports: ${reports.dir}" />
    <echo />
  </target>

  <!-- ================================================================== -->
  <!-- Clean                                                              -->
  <!-- ================================================================== -->

  <target name="clean" description="Clean the TCK setup" depends="init">
    <ant dir="${tck.checkout.dir}/osgi.ct" target="deepclean" />
    <delete dir="${target.dir}" />
  </target>

</project>
